{"version":3,"sources":["registerServiceWorker.ts","components/Loading.tsx","components/App.tsx","components/usePageTracker.ts","components/Root.tsx","index.tsx","components/common/SrOnly.tsx","components/common/ExternalLink.tsx","components/common/usePageTitle.ts","components/common/createHookedContext.tsx","components/common/wrapProviders.tsx","data/polygons.ts","components/configOptions.ts","bimap.ts","styles/media.ts","styles/scales.ts","styles/useStyle.ts","styles/fonts.ts","components/ConfigCtx.ts","components/useMediaInfo.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Loading","css","useStyle","width","height","display","justifyContent","alignContent","alignItems","gridAutoFlow","gridGap","scales","spacing","text","fontFamily","fonts","andaleMono","fontSize","font","size","path","mdiHexagonOutline","spin","HomePage","React","lazy","ViewerPage","App","useLocation","pathname","search","useEffect","ReactGA","pageview","usePageTracker","fallback","element","Providers","wrapProviders","BrowserRouter","DeviceProvider","ConfigCtx","Provider","Root","initialize","root","document","getElementById","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","SrOnly","children","position","overflow","clip","ExternalLink","props","target","rel","usePageTitle","title","createHookedContext","actions","defaultStateCreator","defaultState","isFunction","StateContext","createContext","ActionContext","useReducer","action","dispatch","actionsValue","useMemo","mapValues","value","useState","useContext","useActions","providers","reduceRight","wrapped","provider","wrapProvider","polygonNames","BiMap","polygonPrefixes","primaryPolygons","polygons","defaultColors","3","4","5","6","8","10","colorOptionsList","map","n","key","startCase","type","default","configInputs","min","max","step","options","input","defaultConfig","reduce","obj","option","set","entries","_entries","this","Map","k","val","has","keys","values","mobileMaxWidth","mobilePortraitMaxWidth","tabletMaxWidth","desktopMinWidth","tabletPortrait","mobile","mobileLandscape","mobilePortrait","notMobile","desktop","Object","freeze","1","2","7","styles","deps","rule","StyleSheet","create","prop","times","verdana","setValue","cloneDeep","reset","getWindowWidth","innerWidth","screen","DeviceContext","media","setWidth","handleResize","removeEventListener","getOrientation","useMediaInfo","isMobile","device","orientation"],"mappings":"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","file":"static/js/main.766c1f96.chunk.js","sourcesContent":["// This file is generated by Create React App.\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://cra.link/PWA\",\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\")\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\")\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\",\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\"\r\n\r\nimport { useStyle, fonts, scales } from \"styles\"\r\n\r\nimport Icon from \"@mdi/react\"\r\nimport { mdiHexagonOutline } from \"@mdi/js\"\r\n\r\nexport default function Loading() {\r\n  const css = useStyle({\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n\r\n    display: \"grid\",\r\n    justifyContent: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    gridAutoFlow: \"column\",\r\n    gridGap: scales.spacing[3],\r\n  })\r\n\r\n  const text = useStyle({\r\n    fontFamily: fonts.andaleMono,\r\n    fontSize: scales.font[3],\r\n  })\r\n\r\n  return (\r\n    <div {...css()}>\r\n      <Icon size={scales.size[2]} path={mdiHexagonOutline} spin />\r\n      <div {...text()}>Loading...</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Suspense } from \"react\"\r\nimport { Route, Routes } from \"react-router-dom\"\r\n\r\nimport usePageTracker from \"./usePageTracker\"\r\nimport Loading from \"./Loading\"\r\n\r\nconst HomePage = React.lazy(() => import(\"./HomePage\"))\r\nconst ViewerPage = React.lazy(() => import(\"./ViewerPage\"))\r\n\r\nexport default function App() {\r\n  usePageTracker()\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomePage />} />\r\n        <Route path=\":solid/*\" element={<ViewerPage />} />\r\n      </Routes>\r\n    </Suspense>\r\n  )\r\n}\r\n","import { useEffect } from \"react\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport ReactGA from \"react-ga\"\r\n\r\n// TODO figure out how to make this just a regular hook\r\nexport default function usePageTracker() {\r\n  const { pathname, search } = useLocation()\r\n  useEffect(() => {\r\n    ReactGA.pageview(pathname + search)\r\n  }, [pathname, search])\r\n}\r\n","import React from \"react\"\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nimport { wrapProviders } from \"components/common\"\r\nimport { DeviceProvider } from \"./useMediaInfo\"\r\nimport ConfigCtx from \"./ConfigCtx\"\r\n\r\nimport App from \"./App\"\r\nconst Providers = wrapProviders([\r\n  BrowserRouter,\r\n  DeviceProvider,\r\n  ConfigCtx.Provider,\r\n])\r\n\r\nexport default function Root() {\r\n  return (\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport ReactGA from \"react-ga\"\r\n\r\nimport * as serviceWorker from \"./registerServiceWorker\"\r\nimport Root from \"./components/Root\"\r\n\r\nimport \"what-input\"\r\n\r\nimport \"styles/reset.css\"\r\nimport \"styles/box-sizing.css\"\r\nimport \"styles/a11y.css\"\r\n\r\nconst trackingId =\r\n  process.env.NODE_ENV === \"production\" ? \"UA-122991684-1\" : \"UA-122991684-2\"\r\nReactGA.initialize(trackingId)\r\n\r\nconst root = document.getElementById(\"root\")\r\nif (root) {\r\n  ReactDOM.render(<Root />, root)\r\n}\r\nserviceWorker.register()\r\n","import React from \"react\"\r\nimport { useStyle } from \"styles\"\r\nimport { ChildrenProp } from \"types\"\r\n\r\nexport default function SrOnly({ children }: ChildrenProp) {\r\n  const css = useStyle({\r\n    height: 1,\r\n    width: 1,\r\n    position: \"absolute\",\r\n    overflow: \"hidden\",\r\n    clip: \"rect(1px, 1px, 1px, 1px)\",\r\n  })\r\n  return <span {...css()}>{children}</span>\r\n}\r\n","import React, { AnchorHTMLAttributes } from \"react\"\r\n\r\nexport default function ExternalLink({\r\n  href,\r\n  children,\r\n  ...props\r\n}: AnchorHTMLAttributes<HTMLAnchorElement>) {\r\n  return (\r\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={href} {...props}>\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n","import { useEffect } from \"react\"\r\n\r\nexport default function usePageTitle(title: string) {\r\n  // \"This is broken because it doesn't have a cleanup function,\r\n  // so the page title is stuck... but it's going to be annoying\r\n  // to make it work.\" -- Dan Abramov\r\n  useEffect(() => {\r\n    document.title = title\r\n  }, [title])\r\n}\r\n","import React, { useMemo, useReducer, useContext } from \"react\"\r\nimport { isFunction, mapValues } from \"lodash-es\"\r\n\r\ntype Args = any[]\r\ntype Action<S> = (state: S) => S\r\ntype ActionCreator<S> = (...args: Args) => Action<S>\r\ntype ActionCreators<S, A extends string> = Record<A, ActionCreator<S>>\r\n\r\ntype Dispatch = (...args: Args) => void\r\ntype Actions<A extends string> = Record<A, Dispatch>\r\n\r\ntype PropType = { [prop: string]: any }\r\n\r\n/**\r\n * Given a set of state actions, generate a context provider and useful hooks\r\n * to access its state and actions.\r\n *\r\n * @returns an object with keys `Provider`, `useState`, `useActions`.\r\n */\r\nexport default function createHookedContext<S, A extends string>(\r\n  actions: ActionCreators<S, A>,\r\n  defaultStateCreator: S | ((props?: PropType) => S),\r\n) {\r\n  const defaultState = isFunction(defaultStateCreator)\r\n    ? defaultStateCreator()\r\n    : defaultStateCreator\r\n  const StateContext = React.createContext<S>(defaultState)\r\n\r\n  const ActionContext = React.createContext<Actions<A>>({} as Actions<A>)\r\n\r\n  return {\r\n    Provider({ children, ...props }: PropType) {\r\n      const defaultState = isFunction(defaultStateCreator)\r\n        ? defaultStateCreator(props)\r\n        : defaultStateCreator\r\n      const [state, dispatch] = useReducer(\r\n        (state: S, action: Action<S>) => action(state),\r\n        defaultState,\r\n      )\r\n\r\n      const actionsValue = useMemo(() => {\r\n        return mapValues(\r\n          actions,\r\n          (action: ActionCreator<S>) => (...args: Args) =>\r\n            dispatch(action(...args)),\r\n        )\r\n      }, []) as Actions<A>\r\n\r\n      return (\r\n        <StateContext.Provider value={state}>\r\n          <ActionContext.Provider value={actionsValue}>\r\n            {children}\r\n          </ActionContext.Provider>\r\n        </StateContext.Provider>\r\n      )\r\n    },\r\n    useState() {\r\n      return useContext(StateContext)\r\n    },\r\n    useActions() {\r\n      return useContext(ActionContext)\r\n    },\r\n  }\r\n}\r\n","import React, { ReactType, ReactChild, FunctionComponent } from \"react\"\r\nimport { reduceRight } from \"lodash-es\"\r\n\r\nfunction wrapProvider(Provider: ReactType, children: ReactChild) {\r\n  return <Provider>{children}</Provider>\r\n}\r\n\r\nexport default function wrapProviders(\r\n  providers: ReactType[],\r\n): FunctionComponent {\r\n  return ({ children }: any) =>\r\n    reduceRight(\r\n      providers,\r\n      (wrapped, provider) => wrapProvider(provider, wrapped),\r\n      children,\r\n    )\r\n}\r\n","import { Items } from \"types\"\r\nimport { BiMap } from \"bimap\"\r\n\r\nexport type PolygonMap<T> = { [n: number]: T }\r\n\r\nexport const polygonNames = new BiMap([\r\n  [3, \"triangle\"],\r\n  [4, \"square\"],\r\n  [5, \"pentagon\"],\r\n  [6, \"hexagon\"],\r\n  [8, \"octagon\"],\r\n  [10, \"decagon\"],\r\n] as const)\r\n\r\nexport const polygonPrefixes = new BiMap([\r\n  [1, \"monogonal\"],\r\n  [2, \"digonal\"],\r\n  [3, \"triangular\"],\r\n  [4, \"square\"],\r\n  [5, \"pentagonal\"],\r\n  [6, \"hexagonal\"],\r\n  [8, \"octagonal\"],\r\n  [10, \"decagonal\"],\r\n] as const)\r\n\r\nexport const primaryPolygons = [3, 4, 5] as const\r\nexport type PrimaryPolygon = Items<typeof primaryPolygons>\r\n\r\nexport const secondaryPolygons = [6, 8, 10] as const\r\nexport type SecondaryPolygon = Items<typeof secondaryPolygons>\r\n\r\nexport const polygons = [...primaryPolygons, ...secondaryPolygons]\r\nexport type Polygon = PrimaryPolygon | SecondaryPolygon\r\n","import { startCase, set } from \"lodash-es\"\r\nimport { polygons, polygonNames } from \"data/polygons\"\r\n\r\n// Colors from d3-scale-chromatic:\r\n// https://github.com/d3/d3-scale-chromatic#schemeCategory10\r\nconst defaultColors = {\r\n  3: \"#ff7f00\",\r\n  4: \"#e41a1c\",\r\n  5: \"#377eb8\",\r\n  6: \"#4daf4a\",\r\n  8: \"#a65628\",\r\n  10: \"#984ea3\",\r\n}\r\n\r\ninterface BaseConfigInput<T = any> {\r\n  key: string\r\n  type: string\r\n  default: T\r\n  options?: number[]\r\n  display?: string\r\n}\r\n\r\nexport interface ConfigInput<T = any> extends BaseConfigInput<T> {\r\n  display: string\r\n}\r\n\r\nconst colorOptionsList = polygons.map((n) => {\r\n  return {\r\n    key: `colors[${n}]`,\r\n    display: `${startCase(polygonNames.get(n))} Color`,\r\n    type: \"color\",\r\n    default: defaultColors[n],\r\n  }\r\n})\r\n\r\nexport const configInputs: ConfigInput[] = [\r\n  {\r\n    key: \"showEdges\",\r\n    type: \"checkbox\",\r\n    default: true,\r\n  },\r\n  {\r\n    key: \"showFaces\",\r\n    type: \"checkbox\",\r\n    default: true,\r\n  },\r\n  {\r\n    key: \"showInnerFaces\",\r\n    type: \"checkbox\",\r\n    default: true,\r\n  },\r\n  {\r\n    key: \"opacity\",\r\n    type: \"range\",\r\n    default: 0.9,\r\n    min: 0,\r\n    max: 1,\r\n    step: 0.01,\r\n  },\r\n  {\r\n    key: \"enableAnimation\",\r\n    type: \"checkbox\",\r\n    default: true,\r\n  },\r\n  {\r\n    key: \"animationSpeed\",\r\n    type: \"select\",\r\n    options: [0.25, 0.5, 0.75, 1, 1.25, 1.5, 2],\r\n    default: 1,\r\n  },\r\n  ...colorOptionsList,\r\n].map((input: BaseConfigInput) => ({\r\n  ...input,\r\n  display: input?.display ?? startCase(input.key),\r\n}))\r\n\r\nexport const defaultConfig: Record<string, any> = configInputs.reduce(\r\n  (obj, option) => set(obj, option.key, option.default),\r\n  {},\r\n)\r\n","/**\r\n * A Map that supports bidirectional key/value access.\r\n */\r\nexport class BiMap<K, V> {\r\n  #obj: Map<K, V>\r\n  #inv: Map<V, K>\r\n\r\n  constructor(entries: Iterable<readonly [K, V]>) {\r\n    const _entries = [...entries]\r\n    this.#obj = new Map(_entries)\r\n    this.#inv = new Map(_entries.map(([k, v]) => [v, k]))\r\n  }\r\n\r\n  /**\r\n   * Get the value corresponding to the key\r\n   */\r\n  get(key: K): V {\r\n    return this.#obj.get(key)!\r\n  }\r\n\r\n  /**\r\n   * Get the key corresponding to the value\r\n   */\r\n  of(val: V): K {\r\n    return this.#inv.get(val)!\r\n  }\r\n\r\n  /**\r\n   * Return whether the bimap contains the given key\r\n   */\r\n  hasKey(key: any): key is K {\r\n    return this.#obj.has(key)\r\n  }\r\n\r\n  /**\r\n   * Return whether the bimap contains the given value\r\n   */\r\n  hasValue(val: any): val is V {\r\n    return this.#inv.has(val)\r\n  }\r\n\r\n  /**\r\n   * Get the list of all keys in the bimap\r\n   */\r\n  keys(): Iterable<K> {\r\n    return this.#obj.keys()\r\n  }\r\n\r\n  /**\r\n   * Get the list of all values in the bimap\r\n   */\r\n  values(): Iterable<V> {\r\n    return this.#obj.values()\r\n  }\r\n}\r\n","// https://gist.github.com/gokulkrishh/242e68d1ee94ad05f488\r\n\r\nexport const mobileMaxWidth = 767\r\nexport const mobilePortraitMaxWidth = 480\r\nexport const tabletMaxWidth = 1024\r\nexport const desktopMinWidth = tabletMaxWidth + 1\r\n\r\nexport const tabletPortrait = `@media (min-width: ${\r\n  mobileMaxWidth + 1\r\n}px) and (max-width: ${tabletMaxWidth}px)`\r\nexport const mobile = `@media (max-width: ${mobileMaxWidth}px)`\r\nexport const mobileLandscape = `@media (min-width: ${\r\n  mobilePortraitMaxWidth + 1\r\n}px) and (max-width: ${mobileMaxWidth}px)`\r\nexport const mobilePortrait = `@media (max-width: ${mobilePortraitMaxWidth}px)`\r\nexport const notMobile = `@media (min-width: ${mobileMaxWidth + 1}px)`\r\nexport const desktop = `@media (min-width: ${desktopMinWidth}px)`\r\n","/**\r\n * Scales for font sizes, width/height, and spacing based on tachyons\r\n */\r\n\r\ntype ScaleIndex = 1 | 2 | 3 | 4 | 5 | 6 | 7\r\n\r\n/**\r\n * A scale for font size.\r\n *\r\n * 1. 3rem (48px)\r\n * 2. 2.25rem (36px)\r\n * 3. 1.5rem (24px)\r\n * 4. 1.25rem (20px)\r\n * 5. 1rem (16px)\r\n * 6. 0.875rem (14px)\r\n * 7. 0.75rem (12px)\r\n *\r\n * @see http://tachyons.io/docs/typography/scale/\r\n */\r\nexport const font: Record<ScaleIndex, string> = Object.freeze({\r\n  1: \"3rem\",\r\n  2: \"2.25rem\",\r\n  3: \"1.5rem\",\r\n  4: \"1.25rem\",\r\n  5: \"1rem\",\r\n  6: \"0.875rem\",\r\n  7: \"0.75rem\",\r\n})\r\n\r\n/**\r\n * A scale used for margin/padding/grid gap.\r\n *\r\n * 1. 0.25rem (4px)\r\n * 2. 0.5rem (8px)\r\n * 3. 1rem (16px)\r\n * 4. 2rem (32px)\r\n * 5. 4rem (64px)\r\n * 6. 8rem (128px)\r\n * 7. 16rem (256px)\r\n *\r\n * @see http://tachyons.io/docs/layout/spacing/\r\n */\r\nexport const spacing: Record<ScaleIndex, string> = Object.freeze({\r\n  1: \"0.25rem\",\r\n  2: \"0.5rem\",\r\n  3: \"1rem\",\r\n  4: \"2rem\",\r\n  5: \"4rem\",\r\n  6: \"8rem\",\r\n  7: \"16rem\",\r\n})\r\n\r\n/**\r\n * A scale used for widths and heights.\r\n *\r\n * 1. 1rem (16px)\r\n * 2. 2rem (32px)\r\n * 3. 4rem (64px)\r\n * 4. 8rem (128px)\r\n * 5. 16rem (256px)\r\n * 6. 32rem (512px)\r\n * 7. 48rem (768px)\r\n * 8. 64rem (1024px)\r\n *\r\n * @see http://tachyons.io/docs/layout/widths/\r\n */\r\nexport const size: Record<ScaleIndex | 8, string> = Object.freeze({\r\n  1: \"1rem\",\r\n  2: \"2rem\",\r\n  3: \"4rem\",\r\n  4: \"8rem\",\r\n  5: \"16rem\",\r\n  6: \"32rem\",\r\n  7: \"48rem\",\r\n  8: \"64rem\",\r\n})\r\n","import { useMemo } from \"react\"\r\nimport { StyleSheet, css, CSSProperties } from \"aphrodite/no-important\"\r\n\r\n/**\r\n * Hook that allows you to define dynamic (or static) css for use in a component.\r\n *\r\n * @param styles The CSS properties to compile\r\n * @param deps list of dependencies (like in useMemo). *Unlike* useMemo and useEffect,\r\n * this defaults to [], meaning your styles won't be recalculated at each render\r\n * (since this is the most common case)\r\n * @returns a function to compile the style that takes in an optional `prop` parameter\r\n * (default `className`).\r\n * \r\n * Examples:\r\n *\r\n * ```\r\n // Normal usage\r\n function Component1() {\r\n   const css = useStyle({ margin: '1rem' })\r\n   return <div {...css()}>My Component</div>\r\n }\r\n \r\n // Pass in props\r\n function Component2({ type }) {\r\n   const css = useStyle({\r\n     color: type === 'primary' ? 'blue' : 'white'\r\n   }, [type])\r\n   return <button {...css()}>Click Me</button>\r\n }\r\n \r\n // Choose prop name\r\n function CustomLink() {\r\n   const css = useStyle({ color: 'gray' })\r\n   const activeCss = useStyle({ color: 'black' })\r\n \r\n   // React Router `Link` component\r\n   return <Link {...css()} {...activeCss('activeClassName')}>Click Me</Link>\r\n }\r\n ```\r\n */\r\nexport default function useStyle(styles: CSSProperties, deps: unknown[] = []) {\r\n  return useMemo(() => {\r\n    const rule = StyleSheet.create({ styles })\r\n    return (prop = \"className\") => ({\r\n      [prop]: css(rule.styles),\r\n    })\r\n    // eslint-disable-next-line\r\n  }, [styles, ...deps])\r\n}\r\n","export const times = [\"Times New Roman\", \"Times\", \"serif\"]\r\n\r\nexport const andaleMono = [\"Andale Mono\", \"AndaleMono\", \"monospace\"]\r\n\r\nexport const verdana = [\"Verdana\", \"Geneva\", \"sans-serif\"]\r\n","import { set, cloneDeep } from \"lodash-es\"\r\nimport { createHookedContext } from \"components/common\"\r\nimport { defaultConfig } from \"./configOptions\"\r\n\r\ntype Actions = \"setValue\" | \"reset\"\r\nexport default createHookedContext<typeof defaultConfig, Actions>(\r\n  {\r\n    setValue: <T>(key: string, value: T) => (state) =>\r\n      set(cloneDeep(state), key, value),\r\n    reset: () => () => defaultConfig,\r\n  },\r\n  defaultConfig,\r\n)\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { media } from \"styles\"\r\nimport { ChildrenProp } from \"types\"\r\n\r\nfunction getWindowWidth() {\r\n  return window.innerWidth > 0 ? window.innerWidth : window.screen.width\r\n}\r\n\r\n// The reason we use context is so that we only need to bind one listener to the window\r\nconst DeviceContext = React.createContext(media.desktopMinWidth)\r\n\r\nexport function DeviceProvider({ children }: ChildrenProp) {\r\n  const [width, setWidth] = useState(getWindowWidth())\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setWidth(getWindowWidth())\r\n    window.addEventListener(\"resize\", handleResize)\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DeviceContext.Provider value={width}>{children}</DeviceContext.Provider>\r\n  )\r\n}\r\n\r\nfunction isMobile(width: number) {\r\n  return width <= media.mobileMaxWidth\r\n}\r\n\r\nfunction getOrientation(width: number) {\r\n  return width <= media.mobilePortraitMaxWidth ? \"portrait\" : \"landscape\"\r\n}\r\n\r\nexport default function useMediaInfo() {\r\n  const width = useContext(DeviceContext)\r\n  if (isMobile(width)) {\r\n    return { device: \"mobile\", orientation: getOrientation(width) }\r\n  }\r\n  return { device: \"desktop\", orientation: null }\r\n}\r\n"],"sourceRoot":""}